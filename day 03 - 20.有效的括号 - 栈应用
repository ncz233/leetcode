char warehouse (int ch)
{
    //为什么要返回相反的呢，不是1，2....呢
    //因为栈的知识，返回相反的是为了判断与前一个字符是否一样
    if(ch == ')')
    {
        return '(';
    }
    if(ch == '}')
    {
        return '{';
    }
    if(ch == ']')
    {
        return '[';
    }
    return 0;
}

bool isValid(char * s){

    //判断长度，长度不对应那就false
    int len = strlen(s);
    if(len % 2 == 1)
    {
        return false;
    }

    //开始判断了 - 栈先进后出来达到
    int stk[len+1];//这个是长度
    int top = 0;//这个是下标
    for(int i = 0; i < len; i++)
    {
        //开始判断
        char ch = warehouse(s[i]);
        if(ch)
        {
            //判断这些都是有对应的字符
            if(top == 0 || stk[top-1] != ch)
            {
                return false;
            }
            //这里不需要else因为对比成功了就不需要在对比了，所以--
            top--;
        }
        else
        {
            stk[top++] = s[i];
        }
    }
    //是因为如果top不为0，那么还有数没有对掉
    return top == 0;
}
